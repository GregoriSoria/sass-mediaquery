$deskSize: 1920 !default;
$mobileSize: 768 !default;
$allExact: false !default;

$considerMinimalFont: true !default;
  $minFont: 10 !default; // px
  $minFontResolution: 1280 !default; // px

@mixin attr($attr, $desk: false, $mobile: false, $exact: $allExact) {
  $exact: if($attr == 'font-weight', true, $exact);

  // Considering minimal font
  @if ($considerMinimalFont and $attr == 'font-size' and type-of($desk) == 'number' and $desk < $minFont) {
    @media (max-width: #{$minFontResolution}px) {
      #{$attr}: szGroup($minFont, $minFontResolution);
    }
  }

  @if ($desk) {
    #{$attr}: if($exact, $desk, szGroup($desk)); // print desk value
  }

  @if ($mobile) {
    @media (orientation: portrait), (max-width: 768px) {
      #{$attr}: if($exact, $mobile, szGroup($mobile, $mobileSize)); // print custom value
    }
  }
}

@mixin mediaAttr($attr, $value, $resolution, $exact: $allExact) {
  @if (type-of($resolution)) {
    @media (max-width: #{$resolution}px) {
      #{$attr}: if($exact, $value, szGroup($value, $resolution)); // print desk value // print custom value
    }
  } @else {
    @media #{$resolution} {
      #{$attr}: if($exact, $value, szGroup($value, $resolution)); // print desk value // print custom value
    }
  }
}

@function sz($value, $resolution: $deskSize) {
  @return if(type-of($value) == 'number', #{$value * 100 / $resolution}vw, $value);
}

@function szGroup($args, $resolution: false) {
  $group: '';

  @each $arg in $args {
    // $group: $group + if($resolution, szGroup($arg, $resolution), szGroup($arg)) + ' ';
    @if ($resolution) {
      $group: $group + sz($arg, $resolution) + ' ';
    } @else {
      $group: $group + sz($arg) + ' ';
    }
  }

  @return unquote($group);
}